<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.benny.learn.dao.TestOrderMapper">
  <resultMap id="BaseResultMap" type="cn.com.benny.learn.models.TestOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="payee" jdbcType="VARCHAR" property="payee" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="amont" jdbcType="INTEGER" property="amont" />
    <result column="act_amont" jdbcType="INTEGER" property="actAmont" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, payer, payee, order_no, amont, act_amont, category, remark, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.com.benny.learn.models.TestOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.benny.learn.models.TestOrderExample">
    delete from test_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.benny.learn.models.TestOrder">
    insert into test_order (id, payer, payee, 
      order_no, amont, act_amont, 
      category, remark, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{payer,jdbcType=VARCHAR}, #{payee,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{amont,jdbcType=INTEGER}, #{actAmont,jdbcType=INTEGER}, 
      #{category,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.benny.learn.models.TestOrder">
    insert into test_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payer != null">
        payer,
      </if>
      <if test="payee != null">
        payee,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="amont != null">
        amont,
      </if>
      <if test="actAmont != null">
        act_amont,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payee != null">
        #{payee,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amont != null">
        #{amont,jdbcType=INTEGER},
      </if>
      <if test="actAmont != null">
        #{actAmont,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.benny.learn.models.TestOrderExample" resultType="java.lang.Long">
    select count(*) from test_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payer != null">
        payer = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.payee != null">
        payee = #{record.payee,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.amont != null">
        amont = #{record.amont,jdbcType=INTEGER},
      </if>
      <if test="record.actAmont != null">
        act_amont = #{record.actAmont,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_order
    set id = #{record.id,jdbcType=INTEGER},
      payer = #{record.payer,jdbcType=VARCHAR},
      payee = #{record.payee,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      amont = #{record.amont,jdbcType=INTEGER},
      act_amont = #{record.actAmont,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.benny.learn.models.TestOrder">
    update test_order
    <set>
      <if test="payer != null">
        payer = #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payee != null">
        payee = #{payee,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amont != null">
        amont = #{amont,jdbcType=INTEGER},
      </if>
      <if test="actAmont != null">
        act_amont = #{actAmont,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.benny.learn.models.TestOrder">
    update test_order
    set payer = #{payer,jdbcType=VARCHAR},
      payee = #{payee,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      amont = #{amont,jdbcType=INTEGER},
      act_amont = #{actAmont,jdbcType=INTEGER},
      category = #{category,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>